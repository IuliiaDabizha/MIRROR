name: Chocolatine Workflow

on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'

jobs:
  check_coding_style:
    name: Check Coding Style
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run coding style checker
        run: check.sh $(pwd) $(pwd)

      - name: Display coding style errors
        if: failure()
        run: |
          while IFS= read -r line; do
            echo "::error file=$(echo $line | cut -d: -f1),line=$(echo $line | cut -d: -f2),title=Coding Style Error::$(echo $line | cut -d: -f3-)"
          done < coding-style-reports.log

  check_program_compilation:
    name: Check Program Compilation
    runs-on: ubuntu-latest
    needs: check_coding_style
    container: epitechcontent/epitest-docker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compile the program
        run: timeout 120 make

      - name: Clean compilation files
        run: make clean

      - name: Verify executables
        shell: bash
        run: |
          IFS=',' read -ra EXECUTABLES <<< "$EXECUTABLES"
          for exe in "${EXECUTABLES[@]}"; do
            if [[ ! -x "$exe" ]]; then
              echo "::error title=Missing Executable::$exe is not found or not executable"
              exit 1
            fi
          done

  push_to_mirror:
    name: Push to Mirror Repository
    runs-on: ubuntu-latest
    needs: check_program_compilation
    env:
      GIT_SSH_PRIVATE_KEY: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
      MIRROR_URL: ${{ secrets.MIRROR_URL }}
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$GIT_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Validate MIRROR_URL
        run: |
          if [ -z "$MIRROR_URL" ]; then
            echo "::error title=Missing MIRROR_URL::The MIRROR_URL environment variable is not set."
            exit 1
          fi

      - name: Mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
